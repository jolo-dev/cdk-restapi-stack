{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "Projen - How to Use",
  "steps": [
    {
      "title": "Introduction",
      "description": "# How to use `projen`\n\nWe use `projen` which is on top of AWS CDK as our Infrastructure to Code.\nThe `projenrc.ts` defines all configuration such as `package.json`, `tsconfig.dev.json` etc.\n\n**Note: If you change the files manually or by `pnpm install`, it will be overwritten when using `pnpm projen`**\n\nBelow is workflow of `projen`:\n\n![projen Workflow](.tours/projen.png \"The projen setup\")\n\n## Credentials\n\nThis project requires your AWS-Credentials.\nPlease, go to [https://3stripes.awsapps.com/start#/](https://3stripes.awsapps.com/start#/) and click on `Command line or programmatic access`.\nFrom there, copy the first option by clicking on it and paste it in a terminal.\n\nSee below:\n\n![Add AWS Creds](.tours/expired-token.gif \"How to add your Access\")\n\n## Command\n\n* `pnpm synth` - For \"outputting\" the Cloudformation-template (located in `cdk.out`)\n* `pnpm projen` - For creating all the config files such as `package.json`, `tsconfig.dev.json` etc.\n* `pnpm watch` - For using [`hotswap`](https://docs.aws.amazon.com/cdk/latest/guide/cli.html#cli-deploy-hotswap)\n* `pnpm diff` - For seeing changes\n* `pnpm deploy` - For deploying the infrastructure"
    },
    {
      "file": ".projenrc.ts",
      "description": "In projen, you manage `packages.json` and other project setup such as `.gitignore` in this `.projenrc.ts`- File.\nWhenever you change something, you need to execute `pnpm projen`.\n\n>> pnpm projen\n\nIt might happen that you get `ExpiredTokenException: The security token included in the request is expired`.\nThat is because your Session Token has expired.\nGo to your AWS SSO page and copy the first option and paste it in your terminal:\n![Expired Token](./.tours/expired-token.gif \"SSO to renew Session Token\" =100x20)\n",
      "line": 5
    },
    {
      "file": ".projenrc.ts",
      "selection": {
        "start": {
          "line": 6,
          "character": 25
        },
        "end": {
          "line": 6,
          "character": 45
        }
      },
      "description": "Before we run `pnpm projen`, we need couple of context information for the networking.\n\nWe are calling this utility-function.\n"
    },
    {
      "file": ".projenrc.ts",
      "description": "Here you specify the CDK Version.\nWithout this you would have CDK-packages with different version or you would need to automate them individually.\n**Note: It is changed quite frequently.**",
      "line": 8
    },
    {
      "file": ".projenrc.ts",
      "description": "In order to keep all CDK-packages in sync, there is a dedicated `cdkDependencies` starting with `@aws-cdk/` and then you need to do \n\n>> pnpm projen",
      "line": 13,
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 20,
          "character": 32
        }
      }
    },
    {
      "file": ".projenrc.ts",
      "description": "For the synth it locally, we need to set a context. Otherwise CDK would create tokens which only will be replaced during deployment.\nFor example, in `lambdaFleet.ts` it uses `vpc.fromLookup()` and needs a `vpcId`. But because we retrieve this from the parameter store, CDK placed here tokens in order to retrieve the value during the deployment.\nHowever, `synth` and `test` need an actual value. That is why we fill it with dummy values.\nMore information: https://docs.aws.amazon.com/cdk/latest/guide/tokens.html",
      "selection": {
        "start": {
          "line": 23,
          "character": 3
        },
        "end": {
          "line": 23,
          "character": 18
        }
      },
      "line": 31
    },
    {
      "file": ".projenrc.ts",
      "description": "If you need to put something into the `.gitignore`- File, you need to add that here.\nAgain, you need to run\n\n> pnpm projen",
      "line": 30
    },
    {
      "file": "package.json",
      "selection": {
        "start": {
          "line": 19,
          "character": 5
        },
        "end": {
          "line": 19,
          "character": 37
        }
      },
      "description": "In order to upgrade packages such as `eslint`, `typescript` and its plugins, use command below\n\n>> pnpm upgrade-projen"
    },
    {
      "file": "package.json",
      "selection": {
        "start": {
          "line": 20,
          "character": 5
        },
        "end": {
          "line": 20,
          "character": 51
        }
      },
      "description": "[projen](https://github.com/projen/projen) is releasing frequently. Use the command below to update.\n\n>> pnpm upgrade-projen"
    }
  ],
  "isPrimary": true
}