{
  "Resources": {
    "TestRestApiB7B4EFDA": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "TestRestApi"
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Resource"
      }
    },
    "TestRestApiCloudWatchRole00F6FF01": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/CloudWatchRole/Resource"
      }
    },
    "TestRestApiAccount99ED5377": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "TestRestApiCloudWatchRole00F6FF01",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "TestRestApiB7B4EFDA"
      ],
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Account"
      }
    },
    "TestRestApiDeploymentE31B12656c92abf510a26a55126ede7509bc95bb": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "TestRestApiphaseOPTIONS89F37413",
        "TestRestApiphasepost0A76D630",
        "TestRestApiphase87E526A9",
        "TestRestApiphasesget6A10845D",
        "TestRestApiphasesOPTIONS5BEA033F",
        "TestRestApiphasesA4813094",
        "TestRestApiprojectOPTIONS8F3A1937",
        "TestRestApiprojectpost22FD3AA9",
        "TestRestApiproject61FB5D50",
        "TestRestApiprojectsgetAA01889C",
        "TestRestApiprojectsOPTIONS0BBC0532",
        "TestRestApiprojects13007DA8",
        "TestRestApiseasonOPTIONS0BD3256B",
        "TestRestApiseasonpost3AA9AF5A",
        "TestRestApiseasonCD3D15A4",
        "TestRestApiseasonsget38C0C152",
        "TestRestApiseasonsOPTIONS653ECEC8",
        "TestRestApiseasonsD3B8C7C0",
        "TestRestApitagOPTIONSF26DFEE4",
        "TestRestApitagpostDB21CF82",
        "TestRestApitagE127DF72",
        "TestRestApitagsget220B4E0C",
        "TestRestApitagsOPTIONSD413FCB2",
        "TestRestApitagsC1F64B83"
      ],
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Deployment/Resource"
      }
    },
    "TestRestApiDeploymentStageprod714523E6": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        },
        "DeploymentId": {
          "Ref": "TestRestApiDeploymentE31B12656c92abf510a26a55126ede7509bc95bb"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/DeploymentStage.prod/Resource"
      }
    },
    "TestRestApiphasesA4813094": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "TestRestApiB7B4EFDA",
            "RootResourceId"
          ]
        },
        "PathPart": "phases",
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/phases/Resource"
      }
    },
    "TestRestApiphasesOPTIONS5BEA033F": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "TestRestApiphasesA4813094"
        },
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/phases/OPTIONS/Resource"
      }
    },
    "TestRestApiphasesgetApiPermissionLocalStackTestRestApiA0058C69GETphases39B857CE": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getphasesFunctionB81E8DA3",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-1:000000000000:",
              {
                "Ref": "TestRestApiB7B4EFDA"
              },
              "/",
              {
                "Ref": "TestRestApiDeploymentStageprod714523E6"
              },
              "/GET/phases"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/phases/get/ApiPermission.LocalStackTestRestApiA0058C69.GET..phases"
      }
    },
    "TestRestApiphasesgetApiPermissionTestLocalStackTestRestApiA0058C69GETphases25032949": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getphasesFunctionB81E8DA3",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-1:000000000000:",
              {
                "Ref": "TestRestApiB7B4EFDA"
              },
              "/test-invoke-stage/GET/phases"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/phases/get/ApiPermission.Test.LocalStackTestRestApiA0058C69.GET..phases"
      }
    },
    "TestRestApiphasesget6A10845D": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "TestRestApiphasesA4813094"
        },
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200"
            },
            {
              "StatusCode": "400"
            },
            {
              "StatusCode": "404"
            }
          ],
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getphasesFunctionB81E8DA3",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200"
          },
          {
            "StatusCode": "400"
          },
          {
            "StatusCode": "404"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/phases/get/Resource"
      }
    },
    "TestRestApiprojects13007DA8": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "TestRestApiB7B4EFDA",
            "RootResourceId"
          ]
        },
        "PathPart": "projects",
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/projects/Resource"
      }
    },
    "TestRestApiprojectsOPTIONS0BBC0532": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "TestRestApiprojects13007DA8"
        },
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/projects/OPTIONS/Resource"
      }
    },
    "TestRestApiprojectsgetApiPermissionLocalStackTestRestApiA0058C69GETprojects2DABAA43": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getprojectsFunction3357E987",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-1:000000000000:",
              {
                "Ref": "TestRestApiB7B4EFDA"
              },
              "/",
              {
                "Ref": "TestRestApiDeploymentStageprod714523E6"
              },
              "/GET/projects"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/projects/get/ApiPermission.LocalStackTestRestApiA0058C69.GET..projects"
      }
    },
    "TestRestApiprojectsgetApiPermissionTestLocalStackTestRestApiA0058C69GETprojectsFC1BB840": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getprojectsFunction3357E987",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-1:000000000000:",
              {
                "Ref": "TestRestApiB7B4EFDA"
              },
              "/test-invoke-stage/GET/projects"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/projects/get/ApiPermission.Test.LocalStackTestRestApiA0058C69.GET..projects"
      }
    },
    "TestRestApiprojectsgetAA01889C": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "TestRestApiprojects13007DA8"
        },
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200"
            },
            {
              "StatusCode": "400"
            },
            {
              "StatusCode": "404"
            }
          ],
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getprojectsFunction3357E987",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200"
          },
          {
            "StatusCode": "400"
          },
          {
            "StatusCode": "404"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/projects/get/Resource"
      }
    },
    "TestRestApiseasonsD3B8C7C0": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "TestRestApiB7B4EFDA",
            "RootResourceId"
          ]
        },
        "PathPart": "seasons",
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/seasons/Resource"
      }
    },
    "TestRestApiseasonsOPTIONS653ECEC8": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "TestRestApiseasonsD3B8C7C0"
        },
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/seasons/OPTIONS/Resource"
      }
    },
    "TestRestApiseasonsgetApiPermissionLocalStackTestRestApiA0058C69GETseasonsBF553AFF": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getseasonsFunction9B378D61",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-1:000000000000:",
              {
                "Ref": "TestRestApiB7B4EFDA"
              },
              "/",
              {
                "Ref": "TestRestApiDeploymentStageprod714523E6"
              },
              "/GET/seasons"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/seasons/get/ApiPermission.LocalStackTestRestApiA0058C69.GET..seasons"
      }
    },
    "TestRestApiseasonsgetApiPermissionTestLocalStackTestRestApiA0058C69GETseasonsD911275C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getseasonsFunction9B378D61",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-1:000000000000:",
              {
                "Ref": "TestRestApiB7B4EFDA"
              },
              "/test-invoke-stage/GET/seasons"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/seasons/get/ApiPermission.Test.LocalStackTestRestApiA0058C69.GET..seasons"
      }
    },
    "TestRestApiseasonsget38C0C152": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "TestRestApiseasonsD3B8C7C0"
        },
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200"
            },
            {
              "StatusCode": "400"
            },
            {
              "StatusCode": "404"
            }
          ],
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getseasonsFunction9B378D61",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200"
          },
          {
            "StatusCode": "400"
          },
          {
            "StatusCode": "404"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/seasons/get/Resource"
      }
    },
    "TestRestApitagsC1F64B83": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "TestRestApiB7B4EFDA",
            "RootResourceId"
          ]
        },
        "PathPart": "tags",
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/tags/Resource"
      }
    },
    "TestRestApitagsOPTIONSD413FCB2": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "TestRestApitagsC1F64B83"
        },
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/tags/OPTIONS/Resource"
      }
    },
    "TestRestApitagsgetApiPermissionLocalStackTestRestApiA0058C69GETtagsF6667CB4": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "gettagsFunction7F1ACCEF",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-1:000000000000:",
              {
                "Ref": "TestRestApiB7B4EFDA"
              },
              "/",
              {
                "Ref": "TestRestApiDeploymentStageprod714523E6"
              },
              "/GET/tags"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/tags/get/ApiPermission.LocalStackTestRestApiA0058C69.GET..tags"
      }
    },
    "TestRestApitagsgetApiPermissionTestLocalStackTestRestApiA0058C69GETtagsB5CA377A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "gettagsFunction7F1ACCEF",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-1:000000000000:",
              {
                "Ref": "TestRestApiB7B4EFDA"
              },
              "/test-invoke-stage/GET/tags"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/tags/get/ApiPermission.Test.LocalStackTestRestApiA0058C69.GET..tags"
      }
    },
    "TestRestApitagsget220B4E0C": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "TestRestApitagsC1F64B83"
        },
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200"
            },
            {
              "StatusCode": "400"
            },
            {
              "StatusCode": "404"
            }
          ],
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "gettagsFunction7F1ACCEF",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200"
          },
          {
            "StatusCode": "400"
          },
          {
            "StatusCode": "404"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/tags/get/Resource"
      }
    },
    "TestRestApiphase87E526A9": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "TestRestApiB7B4EFDA",
            "RootResourceId"
          ]
        },
        "PathPart": "phase",
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/phase/Resource"
      }
    },
    "TestRestApiphaseOPTIONS89F37413": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "TestRestApiphase87E526A9"
        },
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/phase/OPTIONS/Resource"
      }
    },
    "TestRestApiphasepostApiPermissionLocalStackTestRestApiA0058C69POSTphase246627A6": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "postphaseFunction47FB85E1",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-1:000000000000:",
              {
                "Ref": "TestRestApiB7B4EFDA"
              },
              "/",
              {
                "Ref": "TestRestApiDeploymentStageprod714523E6"
              },
              "/POST/phase"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/phase/post/ApiPermission.LocalStackTestRestApiA0058C69.POST..phase"
      }
    },
    "TestRestApiphasepostApiPermissionTestLocalStackTestRestApiA0058C69POSTphaseFA9C7FA6": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "postphaseFunction47FB85E1",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-1:000000000000:",
              {
                "Ref": "TestRestApiB7B4EFDA"
              },
              "/test-invoke-stage/POST/phase"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/phase/post/ApiPermission.Test.LocalStackTestRestApiA0058C69.POST..phase"
      }
    },
    "TestRestApiphasepost0A76D630": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "TestRestApiphase87E526A9"
        },
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200"
            },
            {
              "StatusCode": "400"
            },
            {
              "StatusCode": "404"
            }
          ],
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "postphaseFunction47FB85E1",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200"
          },
          {
            "StatusCode": "400"
          },
          {
            "StatusCode": "404"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/phase/post/Resource"
      }
    },
    "TestRestApiproject61FB5D50": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "TestRestApiB7B4EFDA",
            "RootResourceId"
          ]
        },
        "PathPart": "project",
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/project/Resource"
      }
    },
    "TestRestApiprojectOPTIONS8F3A1937": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "TestRestApiproject61FB5D50"
        },
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/project/OPTIONS/Resource"
      }
    },
    "TestRestApiprojectpostApiPermissionLocalStackTestRestApiA0058C69POSTproject4682B4F1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "postprojectFunctionF80C30E6",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-1:000000000000:",
              {
                "Ref": "TestRestApiB7B4EFDA"
              },
              "/",
              {
                "Ref": "TestRestApiDeploymentStageprod714523E6"
              },
              "/POST/project"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/project/post/ApiPermission.LocalStackTestRestApiA0058C69.POST..project"
      }
    },
    "TestRestApiprojectpostApiPermissionTestLocalStackTestRestApiA0058C69POSTprojectEAB0A772": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "postprojectFunctionF80C30E6",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-1:000000000000:",
              {
                "Ref": "TestRestApiB7B4EFDA"
              },
              "/test-invoke-stage/POST/project"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/project/post/ApiPermission.Test.LocalStackTestRestApiA0058C69.POST..project"
      }
    },
    "TestRestApiprojectpost22FD3AA9": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "TestRestApiproject61FB5D50"
        },
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200"
            },
            {
              "StatusCode": "400"
            },
            {
              "StatusCode": "404"
            }
          ],
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "postprojectFunctionF80C30E6",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200"
          },
          {
            "StatusCode": "400"
          },
          {
            "StatusCode": "404"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/project/post/Resource"
      }
    },
    "TestRestApiseasonCD3D15A4": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "TestRestApiB7B4EFDA",
            "RootResourceId"
          ]
        },
        "PathPart": "season",
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/season/Resource"
      }
    },
    "TestRestApiseasonOPTIONS0BD3256B": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "TestRestApiseasonCD3D15A4"
        },
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/season/OPTIONS/Resource"
      }
    },
    "TestRestApiseasonpostApiPermissionLocalStackTestRestApiA0058C69POSTseason19C1F13F": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "postseasonFunction6F4F0AA0",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-1:000000000000:",
              {
                "Ref": "TestRestApiB7B4EFDA"
              },
              "/",
              {
                "Ref": "TestRestApiDeploymentStageprod714523E6"
              },
              "/POST/season"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/season/post/ApiPermission.LocalStackTestRestApiA0058C69.POST..season"
      }
    },
    "TestRestApiseasonpostApiPermissionTestLocalStackTestRestApiA0058C69POSTseasonE41D58CD": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "postseasonFunction6F4F0AA0",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-1:000000000000:",
              {
                "Ref": "TestRestApiB7B4EFDA"
              },
              "/test-invoke-stage/POST/season"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/season/post/ApiPermission.Test.LocalStackTestRestApiA0058C69.POST..season"
      }
    },
    "TestRestApiseasonpost3AA9AF5A": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "TestRestApiseasonCD3D15A4"
        },
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200"
            },
            {
              "StatusCode": "400"
            },
            {
              "StatusCode": "404"
            }
          ],
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "postseasonFunction6F4F0AA0",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200"
          },
          {
            "StatusCode": "400"
          },
          {
            "StatusCode": "404"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/season/post/Resource"
      }
    },
    "TestRestApitagE127DF72": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "TestRestApiB7B4EFDA",
            "RootResourceId"
          ]
        },
        "PathPart": "tag",
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/tag/Resource"
      }
    },
    "TestRestApitagOPTIONSF26DFEE4": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "TestRestApitagE127DF72"
        },
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/tag/OPTIONS/Resource"
      }
    },
    "TestRestApitagpostApiPermissionLocalStackTestRestApiA0058C69POSTtagDCE259C6": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "posttagFunctionB546BDCF",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-1:000000000000:",
              {
                "Ref": "TestRestApiB7B4EFDA"
              },
              "/",
              {
                "Ref": "TestRestApiDeploymentStageprod714523E6"
              },
              "/POST/tag"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/tag/post/ApiPermission.LocalStackTestRestApiA0058C69.POST..tag"
      }
    },
    "TestRestApitagpostApiPermissionTestLocalStackTestRestApiA0058C69POSTtag72B90B1B": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "posttagFunctionB546BDCF",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:eu-west-1:000000000000:",
              {
                "Ref": "TestRestApiB7B4EFDA"
              },
              "/test-invoke-stage/POST/tag"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/tag/post/ApiPermission.Test.LocalStackTestRestApiA0058C69.POST..tag"
      }
    },
    "TestRestApitagpostDB21CF82": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "TestRestApitagE127DF72"
        },
        "RestApiId": {
          "Ref": "TestRestApiB7B4EFDA"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200"
            },
            {
              "StatusCode": "400"
            },
            {
              "StatusCode": "404"
            }
          ],
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "posttagFunctionB546BDCF",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200"
          },
          {
            "StatusCode": "400"
          },
          {
            "StatusCode": "404"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/TestRestApi/Default/tag/post/Resource"
      }
    },
    "getphasesFunctionServiceRoleB3C35CF2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/getphasesFunction/ServiceRole/Resource"
      }
    },
    "getphasesFunctionB81E8DA3": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersbb5a653024b9ac87dedbab03371dfeea89b81f96ba448d85fc05aeafef13ce97S3Bucket45C8A34E"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersbb5a653024b9ac87dedbab03371dfeea89b81f96ba448d85fc05aeafef13ce97S3VersionKey419C8877"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersbb5a653024b9ac87dedbab03371dfeea89b81f96ba448d85fc05aeafef13ce97S3VersionKey419C8877"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getphasesFunctionServiceRoleB3C35CF2",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "LOCAL": "http://localhost:4566"
          }
        },
        "Handler": "phases.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "getphasesFunctionServiceRoleB3C35CF2"
      ],
      "Metadata": {
        "aws:cdk:path": "LocalStack/getphasesFunction/Resource",
        "aws:asset:path": "/Users/jolo/Development/4dt-api-node/lambdas/dist/get",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "getprojectsFunctionServiceRole1D546F41": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/getprojectsFunction/ServiceRole/Resource"
      }
    },
    "getprojectsFunction3357E987": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersbb5a653024b9ac87dedbab03371dfeea89b81f96ba448d85fc05aeafef13ce97S3Bucket45C8A34E"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersbb5a653024b9ac87dedbab03371dfeea89b81f96ba448d85fc05aeafef13ce97S3VersionKey419C8877"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersbb5a653024b9ac87dedbab03371dfeea89b81f96ba448d85fc05aeafef13ce97S3VersionKey419C8877"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getprojectsFunctionServiceRole1D546F41",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "LOCAL": "http://localhost:4566"
          }
        },
        "Handler": "projects.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "getprojectsFunctionServiceRole1D546F41"
      ],
      "Metadata": {
        "aws:cdk:path": "LocalStack/getprojectsFunction/Resource",
        "aws:asset:path": "/Users/jolo/Development/4dt-api-node/lambdas/dist/get",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "getseasonsFunctionServiceRole804AD161": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/getseasonsFunction/ServiceRole/Resource"
      }
    },
    "getseasonsFunction9B378D61": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersbb5a653024b9ac87dedbab03371dfeea89b81f96ba448d85fc05aeafef13ce97S3Bucket45C8A34E"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersbb5a653024b9ac87dedbab03371dfeea89b81f96ba448d85fc05aeafef13ce97S3VersionKey419C8877"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersbb5a653024b9ac87dedbab03371dfeea89b81f96ba448d85fc05aeafef13ce97S3VersionKey419C8877"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getseasonsFunctionServiceRole804AD161",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "LOCAL": "http://localhost:4566"
          }
        },
        "Handler": "seasons.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "getseasonsFunctionServiceRole804AD161"
      ],
      "Metadata": {
        "aws:cdk:path": "LocalStack/getseasonsFunction/Resource",
        "aws:asset:path": "/Users/jolo/Development/4dt-api-node/lambdas/dist/get",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "gettagsFunctionServiceRoleC78F138D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/gettagsFunction/ServiceRole/Resource"
      }
    },
    "gettagsFunction7F1ACCEF": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersbb5a653024b9ac87dedbab03371dfeea89b81f96ba448d85fc05aeafef13ce97S3Bucket45C8A34E"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersbb5a653024b9ac87dedbab03371dfeea89b81f96ba448d85fc05aeafef13ce97S3VersionKey419C8877"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersbb5a653024b9ac87dedbab03371dfeea89b81f96ba448d85fc05aeafef13ce97S3VersionKey419C8877"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "gettagsFunctionServiceRoleC78F138D",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "LOCAL": "http://localhost:4566"
          }
        },
        "Handler": "tags.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "gettagsFunctionServiceRoleC78F138D"
      ],
      "Metadata": {
        "aws:cdk:path": "LocalStack/gettagsFunction/Resource",
        "aws:asset:path": "/Users/jolo/Development/4dt-api-node/lambdas/dist/get",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "postphaseFunctionServiceRoleF729A5ED": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/postphaseFunction/ServiceRole/Resource"
      }
    },
    "postphaseFunction47FB85E1": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersb4f445c83e2594567bce26ed4fa3adeae9f1ea8880e782b423dc7ac9675b8e70S3Bucket4366E335"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersb4f445c83e2594567bce26ed4fa3adeae9f1ea8880e782b423dc7ac9675b8e70S3VersionKey973FC105"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersb4f445c83e2594567bce26ed4fa3adeae9f1ea8880e782b423dc7ac9675b8e70S3VersionKey973FC105"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "postphaseFunctionServiceRoleF729A5ED",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "LOCAL": "http://localhost:4566"
          }
        },
        "Handler": "phase.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "postphaseFunctionServiceRoleF729A5ED"
      ],
      "Metadata": {
        "aws:cdk:path": "LocalStack/postphaseFunction/Resource",
        "aws:asset:path": "/Users/jolo/Development/4dt-api-node/lambdas/dist/post",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "postprojectFunctionServiceRole33CBAB40": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/postprojectFunction/ServiceRole/Resource"
      }
    },
    "postprojectFunctionF80C30E6": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersb4f445c83e2594567bce26ed4fa3adeae9f1ea8880e782b423dc7ac9675b8e70S3Bucket4366E335"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersb4f445c83e2594567bce26ed4fa3adeae9f1ea8880e782b423dc7ac9675b8e70S3VersionKey973FC105"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersb4f445c83e2594567bce26ed4fa3adeae9f1ea8880e782b423dc7ac9675b8e70S3VersionKey973FC105"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "postprojectFunctionServiceRole33CBAB40",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "LOCAL": "http://localhost:4566"
          }
        },
        "Handler": "project.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "postprojectFunctionServiceRole33CBAB40"
      ],
      "Metadata": {
        "aws:cdk:path": "LocalStack/postprojectFunction/Resource",
        "aws:asset:path": "/Users/jolo/Development/4dt-api-node/lambdas/dist/post",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "postseasonFunctionServiceRoleED12AD60": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/postseasonFunction/ServiceRole/Resource"
      }
    },
    "postseasonFunction6F4F0AA0": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersb4f445c83e2594567bce26ed4fa3adeae9f1ea8880e782b423dc7ac9675b8e70S3Bucket4366E335"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersb4f445c83e2594567bce26ed4fa3adeae9f1ea8880e782b423dc7ac9675b8e70S3VersionKey973FC105"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersb4f445c83e2594567bce26ed4fa3adeae9f1ea8880e782b423dc7ac9675b8e70S3VersionKey973FC105"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "postseasonFunctionServiceRoleED12AD60",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "LOCAL": "http://localhost:4566"
          }
        },
        "Handler": "season.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "postseasonFunctionServiceRoleED12AD60"
      ],
      "Metadata": {
        "aws:cdk:path": "LocalStack/postseasonFunction/Resource",
        "aws:asset:path": "/Users/jolo/Development/4dt-api-node/lambdas/dist/post",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "posttagFunctionServiceRoleDA2716EC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/posttagFunction/ServiceRole/Resource"
      }
    },
    "posttagFunctionB546BDCF": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersb4f445c83e2594567bce26ed4fa3adeae9f1ea8880e782b423dc7ac9675b8e70S3Bucket4366E335"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersb4f445c83e2594567bce26ed4fa3adeae9f1ea8880e782b423dc7ac9675b8e70S3VersionKey973FC105"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersb4f445c83e2594567bce26ed4fa3adeae9f1ea8880e782b423dc7ac9675b8e70S3VersionKey973FC105"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "posttagFunctionServiceRoleDA2716EC",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "LOCAL": "http://localhost:4566"
          }
        },
        "Handler": "tag.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "posttagFunctionServiceRoleDA2716EC"
      ],
      "Metadata": {
        "aws:cdk:path": "LocalStack/posttagFunction/Resource",
        "aws:asset:path": "/Users/jolo/Development/4dt-api-node/lambdas/dist/post",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/01Q0U7DMAz8Ft7djGoaz3RDvCHQ+AKTmpK1SarY2TRF+XeSlYo9+e588tluVbvdqceHZ7xwo/txk7QPpNKnoB7h8O3eo8xRoGMmKeJg3AAH71hC1FINHxjQklCo5EjsY9CUoc5LOJsBhS54Vam0pJvNn2uFndY+OoEXmid/teRuM+9YzaSqLWAN2CP/k/tkeCP58X2VFpTBoC3xflp8pWaY0H71qFLdn4I1zMY7eI1OSwVFXnEG3jZYr2d1e0Lhah/1SFJ3yBmc70mdeHNun8ozyy9PbEwTylXGkjou9RfNLwFzaAEAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "LocalStack/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "TestRestApiEndpoint8BFE3226": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "TestRestApiB7B4EFDA"
            },
            ".execute-api.eu-west-1.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "TestRestApiDeploymentStageprod714523E6"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Parameters": {
    "AssetParametersbb5a653024b9ac87dedbab03371dfeea89b81f96ba448d85fc05aeafef13ce97S3Bucket45C8A34E": {
      "Type": "String",
      "Description": "S3 bucket for asset \"bb5a653024b9ac87dedbab03371dfeea89b81f96ba448d85fc05aeafef13ce97\""
    },
    "AssetParametersbb5a653024b9ac87dedbab03371dfeea89b81f96ba448d85fc05aeafef13ce97S3VersionKey419C8877": {
      "Type": "String",
      "Description": "S3 key for asset version \"bb5a653024b9ac87dedbab03371dfeea89b81f96ba448d85fc05aeafef13ce97\""
    },
    "AssetParametersbb5a653024b9ac87dedbab03371dfeea89b81f96ba448d85fc05aeafef13ce97ArtifactHash037949BC": {
      "Type": "String",
      "Description": "Artifact hash for asset \"bb5a653024b9ac87dedbab03371dfeea89b81f96ba448d85fc05aeafef13ce97\""
    },
    "AssetParametersb4f445c83e2594567bce26ed4fa3adeae9f1ea8880e782b423dc7ac9675b8e70S3Bucket4366E335": {
      "Type": "String",
      "Description": "S3 bucket for asset \"b4f445c83e2594567bce26ed4fa3adeae9f1ea8880e782b423dc7ac9675b8e70\""
    },
    "AssetParametersb4f445c83e2594567bce26ed4fa3adeae9f1ea8880e782b423dc7ac9675b8e70S3VersionKey973FC105": {
      "Type": "String",
      "Description": "S3 key for asset version \"b4f445c83e2594567bce26ed4fa3adeae9f1ea8880e782b423dc7ac9675b8e70\""
    },
    "AssetParametersb4f445c83e2594567bce26ed4fa3adeae9f1ea8880e782b423dc7ac9675b8e70ArtifactHash484DC08A": {
      "Type": "String",
      "Description": "Artifact hash for asset \"b4f445c83e2594567bce26ed4fa3adeae9f1ea8880e782b423dc7ac9675b8e70\""
    }
  }
}