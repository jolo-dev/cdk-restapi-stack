{
	"Add a GET Lambda": {
		"scope": "typescript",
		"prefix": "postLambda",
		"body": [
			"import { APIGatewayProxyResult, APIGatewayProxyHandler, APIGatewayProxyEvent } from 'aws-lambda';",
			"import { $1 } from '../../../models/$1';",
			"import DynamoDb from '../DynamoDb';",
			" ",
			"const dynamo = new DynamoDb({});",
			"/**",
			"* @openapi",
			"* /$1:",
			"*   post:",
			"*    $1s:",
			"*      - $1s",
			"*    requestBody:",
			"*      $ref: \"#/components/requestBodies/$1_data\"",
			"*    responses:",
			"*      \"400\":",
			"*         description: \"Error in adding a new $1\"",
			"*      \"200\":",
			"*         description: \"$1 has been added successfully\"",
			"*/",
			"export const handler: APIGatewayProxyHandler = async (event: APIGatewayProxyEvent) => {",
			"  let statusCode = 200;",
			"  try {",
			"    if (event.body) {",
			"      const props = JSON.parse(event.body);",
			"      const entry = new $1(props);",
			"      const entries = await dynamo.addEntry(entry);",
			"      statusCode = entries.$metadata.httpStatusCode ?? 400;",
			"      if (statusCode === 200) {",
			"        const result: APIGatewayProxyResult = {",
			"          statusCode,",
			"          body: `${entry.getProps().$1Name} has been successfully added`,",
			"        };",
			"        return result;",
			"      }else {",
			"        throw new Error(`Error in adding Entry to $1s ${event.body}`);",
			"      }",
			"    } else {",
			"      throw new Error(`The post body is empty or corrupt ${event.body}`);",
			"    }",
			"  } catch (error) {",
			"    console.error(error);",
			"    const e = error as Error;",
			"    return {",
			"       statusCode: 400,",
			"       body: e.message,",
			"    };",
			"  }",
			"};"
		],
		"description": "A Lambda for POST-Requests"
	}
}