{
	"Add a PUT Lambda": {
		"scope": "typescript",
		"prefix": "putLambda",
		"body": [
			"import { APIGatewayEvent, APIGatewayProxyResult } from 'aws-lambda';",
			"import { $1, I$1 } from '../../../models/$1';",
			"import { config } from '../../config/config';",
			"import DynamoDb from '../DynamoDb';",
			" ",
			"const dynamo = new DynamoDb(config);",
			"/**",
			"* @swagger",
			"* /$1:",
			"*   put:",
			"*    tags:",
			"*      - $1s",
			"*    requestBody:",
			"*      $ref: \"#/components/requestBodies/$1_data\"",
			"*    responses:",
			"*      \"200\":",
			"*         description: \"$1 has been updated successfully\"",
			"*      \"400\":",
			"*         description: \"Error in updating Entry ${entry} in $1s\"",
			"*/",
			"export const handler = async (event: APIGatewayEvent) => {",
			"  try {",
			"    if(event.body) {",
			"      let statusCode = 200;",
			"      const props: I$1 = JSON.parse(event.body);",
			"      const entry = await dynamo.getItem<I$1>('$1s', props.name);",
			"      const updatedProps = { ...entry, ...props };",
			"      // Adding an entry with the same partition key works like updating them",
			"      const updateEntry = new $1(entry.name, updatedProps, entry.creationDateTime);",
			"      const entries = await dynamo.addEntry(updateEntry);",
			"      statusCode = entries.$metadata.httpStatusCode ?? 400;",
			"      if (statusCode === 200) {",
			"        const result: APIGatewayProxyResult = {",
			"          statusCode,",
			"          body: `${updateEntry.getName()} has been successfully added`,",
			"        };",
			"        return result;",
			"      } else {",
			"        throw new Error(`Error in updating Entry ${entry.name} in $1s`);",
			"      }",
			"    } else {",
			"      throw new Error('The post body is empty or corrupt.');",
			"    }",
			"  } catch (error) {",
			"    console.error(error);",
			"    const e = error as Error;",
			"    return {",
			"       statusCode: 400,",
			"       body: e.message,",
			"    };",
			"  }",
			"};"
		],
		"description": "A Lambda for PUT-Requests"
	}
}