// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DynamoDbStack 1`] = `
Object {
  "Outputs": Object {
    "TableArnProjects": Object {
      "Description": "DynamoDB TableArn for Projects",
      "Value": Object {
        "Fn::GetAtt": Array [
          "ProjectsTableAA0A2089",
          "Arn",
        ],
      },
    },
    "TableArnTags": Object {
      "Description": "DynamoDB TableArn for Tags",
      "Value": Object {
        "Fn::GetAtt": Array [
          "TagsTable12673369",
          "Arn",
        ],
      },
    },
    "TableNameProjects": Object {
      "Description": "DynamoDB TableName for Projects",
      "Value": Object {
        "Ref": "ProjectsTableAA0A2089",
      },
    },
    "TableNameTags": Object {
      "Description": "DynamoDB TableName for Tags",
      "Value": Object {
        "Ref": "TagsTable12673369",
      },
    },
  },
  "Resources": Object {
    "ProjectsTableAA0A2089": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "ID",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "CreationDateTime",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": Array [
          Object {
            "IndexName": "ProjectsGSI",
            "KeySchema": Array [
              Object {
                "AttributeName": "ID",
                "KeyType": "HASH",
              },
            ],
            "Projection": Object {
              "ProjectionType": "KEYS_ONLY",
            },
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "ID",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "CreationDateTime",
            "KeyType": "RANGE",
          },
        ],
        "TableName": "Projects",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "TagsTable12673369": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "ID",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "CreationDateTime",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": Array [
          Object {
            "IndexName": "TagsGSI",
            "KeySchema": Array [
              Object {
                "AttributeName": "ID",
                "KeyType": "HASH",
              },
            ],
            "Projection": Object {
              "ProjectionType": "KEYS_ONLY",
            },
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "ID",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "CreationDateTime",
            "KeyType": "RANGE",
          },
        ],
        "TableName": "Tags",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;

exports[`FourDPipelineStack 1`] = `
Object {
  "Resources": Object {
    "testpipelinePipeline662FE87D": Object {
      "DependsOn": Array [
        "testpipelinePipelineRoleDefaultPolicy3FB503B2",
        "testpipelinePipelineRoleF17DCB51",
      ],
      "Properties": Object {
        "ArtifactStore": Object {
          "EncryptionKey": Object {
            "Id": Object {
              "Fn::GetAtt": Array [
                "testpipelinePipelineArtifactsBucketEncryptionKey21064932",
                "Arn",
              ],
            },
            "Type": "KMS",
          },
          "Location": Object {
            "Ref": "testpipelinePipelineArtifactsBucketB8FD5CA7",
          },
          "Type": "S3",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "testpipelinePipelineRoleF17DCB51",
            "Arn",
          ],
        },
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": Object {
                  "BranchName": "master",
                  "PollForSourceChanges": false,
                  "RepositoryName": "test-repo",
                },
                "Name": "Source-Action",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Artifact_Source_Source-Action",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "testpipelinePipelineSourceSourceActionCodePipelineActionRoleE80E6CB8",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "testpipelinebuildCodeCommitProject077EE4B1",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Artifact_Source_Source-Action",
                  },
                ],
                "Name": "test-pipeline-build",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "testpipelinePipelineProjenBuildtestpipelinebuildCodePipelineActionRoleD5337B72",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "ProjenBuild",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "testpipelinedeployCodeCommitProject4D17501D",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Artifact_Source_Source-Action",
                  },
                ],
                "Name": "test-pipeline-deploy",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "testpipelinePipelineProjenDeploytestpipelinedeployCodePipelineActionRoleFD432B77",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "ProjenDeploy",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "testpipelinePipelineArtifactsBucketB8FD5CA7": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "testpipelinePipelineArtifactsBucketEncryptionKey21064932",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "testpipelinePipelineArtifactsBucketEncryptionKey21064932": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789010:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "testpipelinePipelineRoleF17DCB51",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "testpipelinePipelineSourceSourceActionCodePipelineActionRoleE80E6CB8",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "testpipelinebuildCodeCommitProjectRole4BF014E7",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "testpipelinebuildCodeCommitProjectRole4BF014E7",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "testpipelinedeployCodeCommitProjectRole7CA5A632",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "testpipelinedeployCodeCommitProjectRole7CA5A632",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "testpipelinePipelineArtifactsBucketEncryptionKeyAliasFAA1609F": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AliasName": "alias/codepipeline-testpipelinetestpipelinepipelinef431bf1f",
        "TargetKeyId": Object {
          "Fn::GetAtt": Array [
            "testpipelinePipelineArtifactsBucketEncryptionKey21064932",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
      "UpdateReplacePolicy": "Delete",
    },
    "testpipelinePipelineEventsRoleA4A3C53E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testpipelinePipelineEventsRoleDefaultPolicy6546A2B6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codepipeline:eu-west-1:123456789010:",
                    Object {
                      "Ref": "testpipelinePipeline662FE87D",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testpipelinePipelineEventsRoleDefaultPolicy6546A2B6",
        "Roles": Array [
          Object {
            "Ref": "testpipelinePipelineEventsRoleA4A3C53E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testpipelinePipelineProjenBuildtestpipelinebuildCodePipelineActionRoleD5337B72": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789010:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testpipelinePipelineProjenBuildtestpipelinebuildCodePipelineActionRoleDefaultPolicy39A2CF36": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testpipelinebuildCodeCommitProject077EE4B1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testpipelinePipelineProjenBuildtestpipelinebuildCodePipelineActionRoleDefaultPolicy39A2CF36",
        "Roles": Array [
          Object {
            "Ref": "testpipelinePipelineProjenBuildtestpipelinebuildCodePipelineActionRoleD5337B72",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testpipelinePipelineProjenDeploytestpipelinedeployCodePipelineActionRoleDefaultPolicy10F7A2C5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testpipelinedeployCodeCommitProject4D17501D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testpipelinePipelineProjenDeploytestpipelinedeployCodePipelineActionRoleDefaultPolicy10F7A2C5",
        "Roles": Array [
          Object {
            "Ref": "testpipelinePipelineProjenDeploytestpipelinedeployCodePipelineActionRoleFD432B77",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testpipelinePipelineProjenDeploytestpipelinedeployCodePipelineActionRoleFD432B77": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789010:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testpipelinePipelineRoleDefaultPolicy3FB503B2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "testpipelinePipelineArtifactsBucketB8FD5CA7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testpipelinePipelineArtifactsBucketB8FD5CA7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testpipelinePipelineArtifactsBucketEncryptionKey21064932",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testpipelinePipelineSourceSourceActionCodePipelineActionRoleE80E6CB8",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testpipelinePipelineProjenBuildtestpipelinebuildCodePipelineActionRoleD5337B72",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testpipelinePipelineProjenDeploytestpipelinedeployCodePipelineActionRoleFD432B77",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testpipelinePipelineRoleDefaultPolicy3FB503B2",
        "Roles": Array [
          Object {
            "Ref": "testpipelinePipelineRoleF17DCB51",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testpipelinePipelineRoleF17DCB51": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testpipelinePipelineSourceSourceActionCodePipelineActionRoleDefaultPolicyBE905555": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "testpipelinePipelineArtifactsBucketB8FD5CA7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testpipelinePipelineArtifactsBucketB8FD5CA7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testpipelinePipelineArtifactsBucketEncryptionKey21064932",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codecommit:eu-west-1:123456789010:test-repo",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testpipelinePipelineSourceSourceActionCodePipelineActionRoleDefaultPolicyBE905555",
        "Roles": Array [
          Object {
            "Ref": "testpipelinePipelineSourceSourceActionCodePipelineActionRoleE80E6CB8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testpipelinePipelineSourceSourceActionCodePipelineActionRoleE80E6CB8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789010:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testpipelinebuildCodeCommitProject077EE4B1": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "EncryptionKey": Object {
          "Fn::GetAtt": Array [
            "testpipelinePipelineArtifactsBucketEncryptionKey21064932",
            "Arn",
          ],
        },
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "testpipelinebuildCodeCommitProjectRole4BF014E7",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g pnpm\\",
        \\"pnpm install\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"pnpm build\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "testpipelinebuildCodeCommitProjectEventsRole976D688D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testpipelinebuildCodeCommitProjectEventsRoleDefaultPolicy87026C10": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testpipelinebuildCodeCommitProject077EE4B1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testpipelinebuildCodeCommitProjectEventsRoleDefaultPolicy87026C10",
        "Roles": Array [
          Object {
            "Ref": "testpipelinebuildCodeCommitProjectEventsRole976D688D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testpipelinebuildCodeCommitProjectRole4BF014E7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testpipelinebuildCodeCommitProjectRoleDefaultPolicy2900951F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:123456789010:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "testpipelinebuildCodeCommitProject077EE4B1",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:123456789010:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "testpipelinebuildCodeCommitProject077EE4B1",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:eu-west-1:123456789010:report-group/",
                    Object {
                      "Ref": "testpipelinebuildCodeCommitProject077EE4B1",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "testpipelinePipelineArtifactsBucketB8FD5CA7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testpipelinePipelineArtifactsBucketB8FD5CA7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testpipelinePipelineArtifactsBucketEncryptionKey21064932",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testpipelinePipelineArtifactsBucketEncryptionKey21064932",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testpipelinebuildCodeCommitProjectRoleDefaultPolicy2900951F",
        "Roles": Array [
          Object {
            "Ref": "testpipelinebuildCodeCommitProjectRole4BF014E7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testpipelinedeployCodeCommitProject4D17501D": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "EncryptionKey": Object {
          "Fn::GetAtt": Array [
            "testpipelinePipelineArtifactsBucketEncryptionKey21064932",
            "Arn",
          ],
        },
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "testpipelinedeployCodeCommitProjectRole7CA5A632",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g pnpm\\",
        \\"pnpm install\\"
      ]
    },
    \\"post_build\\": {
      \\"commands\\": [
        \\"pnpm deploy\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "testpipelinedeployCodeCommitProjectRole7CA5A632": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testpipelinedeployCodeCommitProjectRoleDefaultPolicy0880F6FD": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:123456789010:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "testpipelinedeployCodeCommitProject4D17501D",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:123456789010:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "testpipelinedeployCodeCommitProject4D17501D",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:eu-west-1:123456789010:report-group/",
                    Object {
                      "Ref": "testpipelinedeployCodeCommitProject4D17501D",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "testpipelinePipelineArtifactsBucketB8FD5CA7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "testpipelinePipelineArtifactsBucketB8FD5CA7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testpipelinePipelineArtifactsBucketEncryptionKey21064932",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testpipelinePipelineArtifactsBucketEncryptionKey21064932",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testpipelinedeployCodeCommitProjectRoleDefaultPolicy0880F6FD",
        "Roles": Array [
          Object {
            "Ref": "testpipelinedeployCodeCommitProjectRole7CA5A632",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testpipelinerepositoryOnCommit9BD63799": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
              "referenceUpdated",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":codecommit:eu-west-1:123456789010:test-repo",
                ],
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "testpipelinebuildCodeCommitProject077EE4B1",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "testpipelinebuildCodeCommitProjectEventsRole976D688D",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "testpipelinerepositorytestpipelinetestpipelinePipelineF431BF1FEventRuleC736E536": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
              "referenceUpdated",
            ],
            "referenceName": Array [
              "master",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":codecommit:eu-west-1:123456789010:test-repo",
                ],
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":codepipeline:eu-west-1:123456789010:",
                  Object {
                    "Ref": "testpipelinePipeline662FE87D",
                  },
                ],
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "testpipelinePipelineEventsRoleA4A3C53E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
  },
}
`;

exports[`LambdaFleetStack 1`] = `
Object {
  "Outputs": Object {
    "CfnVpcEndpointdynamodb": Object {
      "Description": "VPCEndpoint with Service dynamodb for VPC: vpc-12345",
      "Export": Object {
        "Name": "VPCEndpointdynamodb",
      },
      "Value": Object {
        "Ref": "VPCEndpointDynamoDbEA9E54C2",
      },
    },
    "CfnVpcEndpointexecuteapi": Object {
      "Description": "VPCEndpoint with Service execute-api for VPC: vpc-12345",
      "Export": Object {
        "Name": "VPCEndpointexecute-api",
      },
      "Value": Object {
        "Ref": "VPCEndpointApiGWDCDB87C3",
      },
    },
    "PrivateApiGatewayCfnApiUrl952172FA": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "PrivateApiGateway618B725A",
            },
            ".execute-api.eu-west-1.",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "PrivateApiGatewayDeploymentStageeuwest14DE26235",
            },
            "/",
          ],
        ],
      },
    },
    "PrivateApiGatewayEndpointA74AF0A0": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "PrivateApiGateway618B725A",
            },
            ".execute-api.eu-west-1.",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "PrivateApiGatewayDeploymentStageeuwest14DE26235",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters0aa8929747f4df4bdd4764130059b3892883780156d212dde1eb2dd3838c2817ArtifactHash50B6CE67": Object {
      "Description": "Artifact hash for asset \\"0aa8929747f4df4bdd4764130059b3892883780156d212dde1eb2dd3838c2817\\"",
      "Type": "String",
    },
    "AssetParameters0aa8929747f4df4bdd4764130059b3892883780156d212dde1eb2dd3838c2817S3Bucket7A4C54BC": Object {
      "Description": "S3 bucket for asset \\"0aa8929747f4df4bdd4764130059b3892883780156d212dde1eb2dd3838c2817\\"",
      "Type": "String",
    },
    "AssetParameters0aa8929747f4df4bdd4764130059b3892883780156d212dde1eb2dd3838c2817S3VersionKey9A3813EB": Object {
      "Description": "S3 key for asset version \\"0aa8929747f4df4bdd4764130059b3892883780156d212dde1eb2dd3838c2817\\"",
      "Type": "String",
    },
    "AssetParametersf4a8af87d409d7b0384000d5eb354e29a409f8dc758e4c84122272a26c0a0b5dArtifactHashAB446BD6": Object {
      "Description": "Artifact hash for asset \\"f4a8af87d409d7b0384000d5eb354e29a409f8dc758e4c84122272a26c0a0b5d\\"",
      "Type": "String",
    },
    "AssetParametersf4a8af87d409d7b0384000d5eb354e29a409f8dc758e4c84122272a26c0a0b5dS3BucketA1D5806A": Object {
      "Description": "S3 bucket for asset \\"f4a8af87d409d7b0384000d5eb354e29a409f8dc758e4c84122272a26c0a0b5d\\"",
      "Type": "String",
    },
    "AssetParametersf4a8af87d409d7b0384000d5eb354e29a409f8dc758e4c84122272a26c0a0b5dS3VersionKey76998BA3": Object {
      "Description": "S3 key for asset version \\"f4a8af87d409d7b0384000d5eb354e29a409f8dc758e4c84122272a26c0a0b5d\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "GETLambdaFleetgetprojectsFunctionBD9C53AD": Object {
      "DependsOn": Array [
        "GETLambdaFleetgetprojectsFunctionServiceRoleDefaultPolicyB4AEADA6",
        "GETLambdaFleetgetprojectsFunctionServiceRole7C13A49F",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters0aa8929747f4df4bdd4764130059b3892883780156d212dde1eb2dd3838c2817S3Bucket7A4C54BC",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0aa8929747f4df4bdd4764130059b3892883780156d212dde1eb2dd3838c2817S3VersionKey9A3813EB",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0aa8929747f4df4bdd4764130059b3892883780156d212dde1eb2dd3838c2817S3VersionKey9A3813EB",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "projects.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "GETLambdaFleetgetprojectsFunctionServiceRole7C13A49F",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "GETLambdaFleetgetprojectsFunctionSecurityGroup7F218189",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Array [
            "private-subnet-1",
            "private-subnet-2",
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "GETLambdaFleetgetprojectsFunctionSecurityGroup7F218189": Object {
      "Properties": Object {
        "GroupDescription": "Automatic security group for Lambda Function testlambdafleetGETLambdaFleetgetprojectsFunction2B628486",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": "vpc-12345",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GETLambdaFleetgetprojectsFunctionServiceRole7C13A49F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GETLambdaFleetgetprojectsFunctionServiceRoleDefaultPolicyB4AEADA6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "*",
              "Effect": "Allow",
              "Resource": "arn:aws:dynamodb:eu-west-1:123456789010:table/*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GETLambdaFleetgetprojectsFunctionServiceRoleDefaultPolicyB4AEADA6",
        "Roles": Array [
          Object {
            "Ref": "GETLambdaFleetgetprojectsFunctionServiceRole7C13A49F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GETLambdaFleetgettagsFunctionFFE814CA": Object {
      "DependsOn": Array [
        "GETLambdaFleetgettagsFunctionServiceRoleDefaultPolicy3A741BB2",
        "GETLambdaFleetgettagsFunctionServiceRoleFC4F98AA",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters0aa8929747f4df4bdd4764130059b3892883780156d212dde1eb2dd3838c2817S3Bucket7A4C54BC",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0aa8929747f4df4bdd4764130059b3892883780156d212dde1eb2dd3838c2817S3VersionKey9A3813EB",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0aa8929747f4df4bdd4764130059b3892883780156d212dde1eb2dd3838c2817S3VersionKey9A3813EB",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "tags.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "GETLambdaFleetgettagsFunctionServiceRoleFC4F98AA",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "GETLambdaFleetgettagsFunctionSecurityGroup319D05A5",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Array [
            "private-subnet-1",
            "private-subnet-2",
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "GETLambdaFleetgettagsFunctionSecurityGroup319D05A5": Object {
      "Properties": Object {
        "GroupDescription": "Automatic security group for Lambda Function testlambdafleetGETLambdaFleetgettagsFunction7F858C55",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": "vpc-12345",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GETLambdaFleetgettagsFunctionServiceRoleDefaultPolicy3A741BB2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "*",
              "Effect": "Allow",
              "Resource": "arn:aws:dynamodb:eu-west-1:123456789010:table/*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GETLambdaFleetgettagsFunctionServiceRoleDefaultPolicy3A741BB2",
        "Roles": Array [
          Object {
            "Ref": "GETLambdaFleetgettagsFunctionServiceRoleFC4F98AA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GETLambdaFleetgettagsFunctionServiceRoleFC4F98AA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "POSTLambdaFleetpostprojectFunction11E1F9F4": Object {
      "DependsOn": Array [
        "POSTLambdaFleetpostprojectFunctionServiceRoleDefaultPolicyD0AFF5A3",
        "POSTLambdaFleetpostprojectFunctionServiceRole964E8986",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersf4a8af87d409d7b0384000d5eb354e29a409f8dc758e4c84122272a26c0a0b5dS3BucketA1D5806A",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersf4a8af87d409d7b0384000d5eb354e29a409f8dc758e4c84122272a26c0a0b5dS3VersionKey76998BA3",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersf4a8af87d409d7b0384000d5eb354e29a409f8dc758e4c84122272a26c0a0b5dS3VersionKey76998BA3",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "project.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "POSTLambdaFleetpostprojectFunctionServiceRole964E8986",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "POSTLambdaFleetpostprojectFunctionSecurityGroup4EC56EF9",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Array [
            "private-subnet-1",
            "private-subnet-2",
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "POSTLambdaFleetpostprojectFunctionSecurityGroup4EC56EF9": Object {
      "Properties": Object {
        "GroupDescription": "Automatic security group for Lambda Function testlambdafleetPOSTLambdaFleetpostprojectFunction7C5BB800",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": "vpc-12345",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "POSTLambdaFleetpostprojectFunctionServiceRole964E8986": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "POSTLambdaFleetpostprojectFunctionServiceRoleDefaultPolicyD0AFF5A3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "*",
              "Effect": "Allow",
              "Resource": "arn:aws:dynamodb:eu-west-1:123456789010:table/*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "POSTLambdaFleetpostprojectFunctionServiceRoleDefaultPolicyD0AFF5A3",
        "Roles": Array [
          Object {
            "Ref": "POSTLambdaFleetpostprojectFunctionServiceRole964E8986",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "POSTLambdaFleetposttagFunctionF3AE6045": Object {
      "DependsOn": Array [
        "POSTLambdaFleetposttagFunctionServiceRoleDefaultPolicy932B0243",
        "POSTLambdaFleetposttagFunctionServiceRoleF662751E",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersf4a8af87d409d7b0384000d5eb354e29a409f8dc758e4c84122272a26c0a0b5dS3BucketA1D5806A",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersf4a8af87d409d7b0384000d5eb354e29a409f8dc758e4c84122272a26c0a0b5dS3VersionKey76998BA3",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersf4a8af87d409d7b0384000d5eb354e29a409f8dc758e4c84122272a26c0a0b5dS3VersionKey76998BA3",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "tag.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "POSTLambdaFleetposttagFunctionServiceRoleF662751E",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "POSTLambdaFleetposttagFunctionSecurityGroupA16EB349",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Array [
            "private-subnet-1",
            "private-subnet-2",
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "POSTLambdaFleetposttagFunctionSecurityGroupA16EB349": Object {
      "Properties": Object {
        "GroupDescription": "Automatic security group for Lambda Function testlambdafleetPOSTLambdaFleetposttagFunctionF28C4CFF",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": "vpc-12345",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "POSTLambdaFleetposttagFunctionServiceRoleDefaultPolicy932B0243": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "*",
              "Effect": "Allow",
              "Resource": "arn:aws:dynamodb:eu-west-1:123456789010:table/*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "POSTLambdaFleetposttagFunctionServiceRoleDefaultPolicy932B0243",
        "Roles": Array [
          Object {
            "Ref": "POSTLambdaFleetposttagFunctionServiceRoleF662751E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "POSTLambdaFleetposttagFunctionServiceRoleF662751E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "PrivateApiGateway618B725A": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "PRIVATE",
          ],
          "VpcEndpointIds": Array [
            Object {
              "Ref": "VPCEndpointApiGWDCDB87C3",
            },
          ],
        },
        "Name": "PrivateApiGateway",
        "Policy": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:Invoke",
              "Condition": Object {
                "StringEquals": Object {
                  "aws:sourceVpce": "vpce-01988d3d83bebbf0e",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": "execute-api:/*/*/*",
              "Sid": "AllowVPCEndpointToInvoke",
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": "lambda.amazonaws.com",
              "Sid": "InvokeLambda",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "PrivateApiGatewayAccountE06D5DCF": Object {
      "DependsOn": Array [
        "PrivateApiGateway618B725A",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "PrivateApiGatewayCloudWatchRoleDCA8DC6A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "PrivateApiGatewayCloudWatchRoleDCA8DC6A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "PrivateApiGatewayDeployment8BFAB2AA8aa9e111890561e5cfdb8963dbe0be2a": Object {
      "DependsOn": Array [
        "PrivateApiGatewayprojectpost39313EE5",
        "PrivateApiGatewayproject915840A4",
        "PrivateApiGatewayprojectsget15711F53",
        "PrivateApiGatewayprojects94902F3C",
        "PrivateApiGatewaytagpostC1BA149B",
        "PrivateApiGatewaytag70A3959A",
        "PrivateApiGatewaytagsget6E6A6807",
        "PrivateApiGatewaytags67126F69",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "PrivateApiGateway618B725A",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "PrivateApiGatewayDeploymentStageeuwest14DE26235": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "PrivateApiGatewayDeployment8BFAB2AA8aa9e111890561e5cfdb8963dbe0be2a",
        },
        "RestApiId": Object {
          "Ref": "PrivateApiGateway618B725A",
        },
        "StageName": "eu-west-1",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "PrivateApiGatewayproject915840A4": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "PrivateApiGateway618B725A",
            "RootResourceId",
          ],
        },
        "PathPart": "project",
        "RestApiId": Object {
          "Ref": "PrivateApiGateway618B725A",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "PrivateApiGatewayprojectpost39313EE5": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "StatusCode": "400",
            },
            Object {
              "StatusCode": "404",
            },
          ],
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "POSTLambdaFleetpostprojectFunction11E1F9F4",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "400",
          },
          Object {
            "StatusCode": "404",
          },
        ],
        "ResourceId": Object {
          "Ref": "PrivateApiGatewayproject915840A4",
        },
        "RestApiId": Object {
          "Ref": "PrivateApiGateway618B725A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "PrivateApiGatewayprojectpostApiPermissionTesttestlambdafleetPrivateApiGatewayC62DC744POSTproject679DC65A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "POSTLambdaFleetpostprojectFunction11E1F9F4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-west-1:123456789010:",
              Object {
                "Ref": "PrivateApiGateway618B725A",
              },
              "/test-invoke-stage/POST/project",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "PrivateApiGatewayprojectpostApiPermissiontestlambdafleetPrivateApiGatewayC62DC744POSTprojectB8D0883B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "POSTLambdaFleetpostprojectFunction11E1F9F4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-west-1:123456789010:",
              Object {
                "Ref": "PrivateApiGateway618B725A",
              },
              "/",
              Object {
                "Ref": "PrivateApiGatewayDeploymentStageeuwest14DE26235",
              },
              "/POST/project",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "PrivateApiGatewayprojects94902F3C": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "PrivateApiGateway618B725A",
            "RootResourceId",
          ],
        },
        "PathPart": "projects",
        "RestApiId": Object {
          "Ref": "PrivateApiGateway618B725A",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "PrivateApiGatewayprojectsget15711F53": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "StatusCode": "400",
            },
            Object {
              "StatusCode": "404",
            },
          ],
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "GETLambdaFleetgetprojectsFunctionBD9C53AD",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "400",
          },
          Object {
            "StatusCode": "404",
          },
        ],
        "ResourceId": Object {
          "Ref": "PrivateApiGatewayprojects94902F3C",
        },
        "RestApiId": Object {
          "Ref": "PrivateApiGateway618B725A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "PrivateApiGatewayprojectsgetApiPermissionTesttestlambdafleetPrivateApiGatewayC62DC744GETprojectsA29B86C9": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "GETLambdaFleetgetprojectsFunctionBD9C53AD",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-west-1:123456789010:",
              Object {
                "Ref": "PrivateApiGateway618B725A",
              },
              "/test-invoke-stage/GET/projects",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "PrivateApiGatewayprojectsgetApiPermissiontestlambdafleetPrivateApiGatewayC62DC744GETprojects3C6B93BC": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "GETLambdaFleetgetprojectsFunctionBD9C53AD",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-west-1:123456789010:",
              Object {
                "Ref": "PrivateApiGateway618B725A",
              },
              "/",
              Object {
                "Ref": "PrivateApiGatewayDeploymentStageeuwest14DE26235",
              },
              "/GET/projects",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "PrivateApiGatewaytag70A3959A": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "PrivateApiGateway618B725A",
            "RootResourceId",
          ],
        },
        "PathPart": "tag",
        "RestApiId": Object {
          "Ref": "PrivateApiGateway618B725A",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "PrivateApiGatewaytagpostApiPermissionTesttestlambdafleetPrivateApiGatewayC62DC744POSTtag81EB1CF4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "POSTLambdaFleetposttagFunctionF3AE6045",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-west-1:123456789010:",
              Object {
                "Ref": "PrivateApiGateway618B725A",
              },
              "/test-invoke-stage/POST/tag",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "PrivateApiGatewaytagpostApiPermissiontestlambdafleetPrivateApiGatewayC62DC744POSTtag16CD9487": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "POSTLambdaFleetposttagFunctionF3AE6045",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-west-1:123456789010:",
              Object {
                "Ref": "PrivateApiGateway618B725A",
              },
              "/",
              Object {
                "Ref": "PrivateApiGatewayDeploymentStageeuwest14DE26235",
              },
              "/POST/tag",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "PrivateApiGatewaytagpostC1BA149B": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "StatusCode": "400",
            },
            Object {
              "StatusCode": "404",
            },
          ],
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "POSTLambdaFleetposttagFunctionF3AE6045",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "400",
          },
          Object {
            "StatusCode": "404",
          },
        ],
        "ResourceId": Object {
          "Ref": "PrivateApiGatewaytag70A3959A",
        },
        "RestApiId": Object {
          "Ref": "PrivateApiGateway618B725A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "PrivateApiGatewaytags67126F69": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "PrivateApiGateway618B725A",
            "RootResourceId",
          ],
        },
        "PathPart": "tags",
        "RestApiId": Object {
          "Ref": "PrivateApiGateway618B725A",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "PrivateApiGatewaytagsget6E6A6807": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
            Object {
              "StatusCode": "400",
            },
            Object {
              "StatusCode": "404",
            },
          ],
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "GETLambdaFleetgettagsFunctionFFE814CA",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
          Object {
            "StatusCode": "400",
          },
          Object {
            "StatusCode": "404",
          },
        ],
        "ResourceId": Object {
          "Ref": "PrivateApiGatewaytags67126F69",
        },
        "RestApiId": Object {
          "Ref": "PrivateApiGateway618B725A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "PrivateApiGatewaytagsgetApiPermissionTesttestlambdafleetPrivateApiGatewayC62DC744GETtags8269803E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "GETLambdaFleetgettagsFunctionFFE814CA",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-west-1:123456789010:",
              Object {
                "Ref": "PrivateApiGateway618B725A",
              },
              "/test-invoke-stage/GET/tags",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "PrivateApiGatewaytagsgetApiPermissiontestlambdafleetPrivateApiGatewayC62DC744GETtags3816C5DD": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "GETLambdaFleetgettagsFunctionFFE814CA",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-west-1:123456789010:",
              Object {
                "Ref": "PrivateApiGateway618B725A",
              },
              "/",
              Object {
                "Ref": "PrivateApiGatewayDeploymentStageeuwest14DE26235",
              },
              "/GET/tags",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "VPCESg511F1255": Object {
      "Properties": Object {
        "GroupDescription": "Security Group for VPC Endpoint",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "10.0.0.0/8",
            "Description": "Access to let all Adidas machines in",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
          Object {
            "CidrIp": "1.2.3.4/5",
            "Description": "from 1.2.3.4/5:443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": "vpc-12345",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VPCEndpointApiGWDCDB87C3": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VPCESg511F1255",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.eu-west-1.execute-api",
        "SubnetIds": Array [
          "p-12345",
          "p-67890",
        ],
        "VpcEndpointType": "Interface",
        "VpcId": "vpc-12345",
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VPCEndpointDynamoDbEA9E54C2": Object {
      "Properties": Object {
        "RouteTableIds": Array [
          "rtb-12345p",
          "rtb-57890p",
          "rtb-12345s",
          "rtb-67890s",
        ],
        "ServiceName": "com.amazonaws.eu-west-1.dynamodb",
        "VpcEndpointType": "Gateway",
        "VpcId": "vpc-12345",
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
  },
}
`;
